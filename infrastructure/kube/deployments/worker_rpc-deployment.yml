
apiVersion: v1
kind: ServiceAccount
metadata:
  name: worker-rpc
  namespace: ekskam-system

---

apiVersion: v1
kind: Service
metadata:
  name: worker-rpc-svc
  namespace: ekskam-system
  annotations:
    # This annotation puts the AWS ELB into "TCP" mode so that it does not
    # do HTTP negotiation for HTTPS connections at the ELB edge.
    # The downside of this is the remote IP address of all connections will
    # appear to be the internal address of the ELB. See docs/proxy-proto.md
    # for information about enabling the PROXY protocol on the ELB to recover
    # the original remote IP address.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
spec:
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 9099
    - port: 443
      name: https
      protocol: TCP
      targetPort: 9443
  selector:
    app: worker-rpc
  type: LoadBalancer

---

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: worker-rpc
  namespace: ekskam-system
spec:
  selector:
    matchLabels:
      app: worker-rpc
  replicas: 3 # tells deployment to run 3 pods matching the template
  template:
    metadata:
      labels:
        app: worker-rpc
    spec:
      serviceAccountName: worker-rpc
      containers:
        - name: worker-rpc
          image: kamestery/worker_rpc:0.1
          ports:
            - containerPort: 9099
          env:
            - name: GRPC_VERBOSITY
              value: "debug"
