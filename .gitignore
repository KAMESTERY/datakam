# Project related
.idea
*.iml
.terraform/plugins/linux_amd64/terraform-provider-aws*
.terraform/plugins/darwin_amd64/terraform-provider-aws*
conan_cargo_build.rs
conaninfo.txt
conan_imports_manifest.txt
nimcache
include
lib
lambda/worker/slapman
slapman/vendor
build
/*.log
/target
/*-init.clj
/resources/public/js/compiled
out

# Java related
pom.xml
pom.xml.asc
*jar
*.class

# Leiningen
classes/
lib/
native/
checkouts/
target/
.lein-*
repl-port
.nrepl-port
.repl

# Temp Files
*.orig
*~
.*.swp
.*.swo
*.tmp
*.bak

# OS X
.DS_Store

# Logging
*.log
/logs/

# Builds
out/
build/

### Node template
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Typescript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env


### Rust template
# Generated by Cargo
# will have compiled files and executables
/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here http://doc.crates.io/guide.html#cargotoml-vs-cargolock
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

