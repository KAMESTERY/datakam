{:paths ["config" "src" "resources"]
 :deps  {org.clojure/clojure            {:mvn/version "1.10.1"}
         kamestery/contractskam         {:git/url "https://github.com/kamestery/contractskam"
                                         :sha     "5a1331b28df009f3dfa26a0aaa67352d52a6a183"}
         ;;kamestery/contractskam {:local/root "/path/to/contractskam"}
         io.pedestal/pedestal.service   {:mvn/version "0.5.8"}
         ;; Remove this line and uncomment one of the next lines to
         ;; use Immutant or Tomcat instead of Jetty:
         io.pedestal/pedestal.jetty {:mvn/version "0.5.8"}
         ;io.pedestal/pedestal.immutant  {:mvn/version "0.5.8"
         ;                                :exclusions  [javax.servlet/javax.servlet-api]}
         ;io.pedestal/pedestal.tomcat {:mvn/version "0.5.8"}
         io.pedestal/pedestal.aws       {:mvn/version "0.5.8"}
         com.cognitect.aws/api          {:mvn/version "0.8.408"}
         com.cognitect.aws/endpoints    {:mvn/version "1.1.11.692"}
         com.cognitect.aws/dynamodb     {:mvn/version "776.2.580.0"} ;; https://mvnrepository.com/artifact/com.cognitect.aws/dynamodb
         ch.qos.logback/logback-classic {:mvn/version "1.3.0-alpha5"
                                         :exclusions  [org.slf4j/slf4j-api]}
         org.slf4j/jul-to-slf4j         {:mvn/version "2.0.0-alpha1"}
         org.slf4j/jcl-over-slf4j       {:mvn/version "2.0.0-alpha1"}
         org.slf4j/log4j-over-slf4j     {:mvn/version "2.0.0-alpha1"}
         com.taoensso/timbre            {:mvn/version "4.10.0"}
         environ                        {:mvn/version "1.2.0"}
         com.walmartlabs/lacinia        {:mvn/version "0.37.0"}
         selmer                         {:mvn/version "1.12.27"}
         camel-snake-kebab              {:mvn/version "0.4.1"}
         com.rpl/specter                {:mvn/version "1.1.3"}
         ;buddy {:mvn/version "2.0.0"}
         buddy/buddy-core               {:mvn/version "1.6.0"}
         buddy/buddy-auth               {:mvn/version "2.2.0"}
         buddy/buddy-hashers            {:mvn/version "1.4.0"}
         buddy/buddy-sign               {:mvn/version "3.1.0"}
         clj-commons/unfurl             {:mvn/version "0.12.0-SNAPSHOT"}
         clj-time                       {:mvn/version "0.15.2"}
         expound                        {:mvn/version "0.8.5"}
         com.bhauman/spell-spec         {:mvn/version "0.1.2"}
         org.clojure/test.check         {:mvn/version "0.10.0"
                                         :scope       "test"}}
 :aliases
        {:ancient {:main-opts  ["-m" "deps-ancient.deps-ancient"]
                   :extra-deps {deps-ancient {:mvn/version "0.0.4"}}}
         :cljfmt  {:main-opts  ["-m" "cljfmt.main" "fix"]   ;; -m cljfmt.main [check|fix]
                   :extra-deps {cljfmt {:mvn/version "0.6.8"}}}
         :dev     {:main-opts  ["-m" "datakam.server"]
                   ;;:jvm-opts ["-server" "-Xmx12G" "-Xmx8g" "-XX:+UseG1GC"]
                   :jvm-opts   ["-server"
                                ;;"-Dclojure.compiler.elide-meta=\"[:doc :file :line :added]\""
                                "-Dclojure.compiler.direct-linking=true"]
                   :extra-deps {io.pedestal/pedestal.service-tools {:mvn/version "0.5.8"}}}
         :test    {:extra-paths ["test"]
                   :extra-deps  {org.clojure/test.check {:mvn/version "0.10.0"}}}
         :runner
                  {:extra-deps {com.cognitect/test-runner
                                {:git/url "https://github.com/cognitect-labs/test-runner"
                                 :sha     "f7ef16dc3b8332b0d77bc0274578ad5270fbfedd"}}
                   :main-opts  ["-m" "cognitect.test-runner"
                                "-d" "test"]}
         :uberjar {:extra-deps {seancorfield/depstar {:mvn/version "1.0.94"}}
                   ;;:jvm-opts ["-server" "-Xmx12G" "-Xmx8g" "-XX:+UseG1GC"]
                   :jvm-opts   ["-server"
                                ;;"-Dclojure.compiler.elide-meta=\"[:doc :file :line :added]\""
                                "-Dclojure.compiler.direct-linking=true"]
                   :main-opts  ["-m" "hf.depstar.uberjar" "datakam.jar"
                                "-C" "-m" "datakam.server"]}
         :native-image
         ;; If you use HTTP/2 or ALPN, use the java-agent to pull in the correct alpn-boot dependency
         ;:java-agents [[org.mortbay.jetty.alpn/jetty-alpn-agent "2.0.5"]]
                  {:main-opts ["-m clj.native-image datakam.server"
                               "--initialize-at-build-time"
                               ;; optional native image name override
                               "-H:Name=server"
                               ;; pass-thru args to GraalVM native-image, optional
                               "--verbose"
                               ;;"-J-server" "-J-Xmx4G" "-J-Xmx2g" "-J-XX:+UseG1GC"
                               ;;"-J-server" "-J-Xmx12G" "-J-Xmx8g" "-J-XX:+UseG1GC"
                               "-H:EnableURLProtocols=http,https"
                               "--report-unsupported-elements-at-runtime" ;; ignore native-image build errors
                               "--no-server"                ;; TODO issue with subsequent builds failing on same server
                               ]
                   ;;:jvm-opts ["-server" "-Xmx12G" "-Xmx8g" "-XX:+UseG1GC"]
                   :jvm-opts  ["-server"
                               ;;"-Dclojure.compiler.elide-meta=\"[:doc :file :line :added]\""
                               "-Dclojure.compiler.direct-linking=true"]
                   :extra-deps
                              {clj.native-image
                               {:git/url "https://github.com/taylorwood/clj.native-image.git"
                                :sha     "602587dfb5243ea8c72ed3e967c37c1f9d611723"}}}}}
  